todoist-converter:
	distribution:
		- add license file @small
		- Create a formula for homebrew, see for explanation http://jimkubicek.com/blog/2015/02/14/creating-a-homebrew-formula-for-a-python-project/ @medium
	features:
		- add simple error handling and result message to gui 
		- add version number and info text to app @done(2017-01-05)
		- process an entire backup zip file @large
		- add app icon with pytinstaller --icon <FILE.ico or FILE.icns>

Archive:
	- create python package tdconv @done @project(todoist-converter / code layout)
	- split code into common, taskpaper, converters and commandline code @done @project(todoist-converter / code layout)
	- refactor taskpaper converter to oop code @done @project(todoist-converter / code layout)
	- refactor processing of notes/attachments to oop code @done @project(todoist-converter / code layout)
	- use namedtuple instead of dict for csv rows @done @project(todoist-converter / code layout)
	- create a first release after making downloads optional @done @project(todoist-converter / distribution)
	- add commandline option for output file, append output of markdown and taskpaper to file if it exists @done @project(todoist-converter / features)
	- make download of attachments optional for TaskPaper and Markdown @done @project(todoist-converter / features)
	- make gui @done @project(todoist-converter / features)
	- package as standalone app so more people can use it @large @done(2017-01-05) @project(todoist-converter / features)
	- strip todoist IDs from filename and project name @done @project(todoist-converter / features)