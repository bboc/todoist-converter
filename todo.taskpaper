todoist-converter:
	fixes:
		- opml to csv does not write priority as int (empty string instead) @na
		- app does not export to OPML @na
		- app must write result file to the same directory as input file if no specific location is set @na
	features:
		- process an entire backup zip file @medium
		- process folder @small
		- process one zip file or folder into one OPML file @medium
		- convert opml to taskpaper and back (find out: what is a task, and what is an note, this should not be ambiguous, use taskpaper opml script, omnioutliner task paper export and carbon fin to test) @large
	distribution:
		- add license file @small
		- Create a formula for homebrew, see for explanation http://jimkubicek.com/blog/2015/02/14/creating-a-homebrew-formula-for-a-python-project/ @medium @later
	
	GUI Redesign:
		Make GUI dynamic dependent on input (todoist CSV, Todoist Backup (ZIP), OPML, Directory): after file selection, change selection and enable/disable sections.
			
		- Add two tabs (one for folders, one for files), which also include the convert button, but NOT the output area.
		- add separator or title to output area and make it extend with the window @done
		Files Tab:
			- File to Convert: ____________ @done
			- Output Filename: _____________ @done
			- [ ] Download attachments @done
			File is OPML:
				- Ouptut Format: (x) CSV @done
			File is todoist CSV:
				- Ouptut Format: (x) Taskpaper ( ) OPML ( ) Markdown @done
			File is Todoist Backup (ZIP file):
				- Output Format: (x) Taskpaper ( ) Markdown @done
				- [ ] Collect to one file
		Directory Tab:
			- Directory to Convert: ____________
			- Files to process: ( ) Todoist (CSV) ( ) OPML
			- if Todoist: 
				- [ ] Download
				- ( ) Taskpaper ( ) OPML ( ) Markdown
			- if target not OPML()
				- [ ] Collect to one file

other:
	- convert png co mac icon: https://iconverticons.com/online/
